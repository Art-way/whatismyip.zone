"use strict";(()=>{var e={};e.id=477,e.ids=[477],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},929:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{POST:()=>p});var s=t(9303),n=t(8716),a=t(670),i=t(7070);async function p(e){try{let{ip:r}=await e.json();if(!r||!/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/.test(r))return i.NextResponse.json({error:"A valid IPv4 address is required."},{status:400});let t=await fetch(`https://proxycheck.io/v2/${r}?vpn=1&asn=1`);if(!t.ok)throw Error("Failed to connect to the proxy checking service.");let o=(await t.json())[r];return i.NextResponse.json({ip:r,isProxy:"yes"===o.proxy,isVpn:"yes"===o.vpn,type:o.type,provider:o.provider,country:o.country},{status:200})}catch(e){return i.NextResponse.json({error:e instanceof Error?e.message:"An internal server error occurred."},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/proxy-check/route",pathname:"/api/proxy-check",filename:"route",bundlePath:"app/api/proxy-check/route"},resolvedPagePath:"C:\\Projects\\whatismyip.zone\\app\\api\\proxy-check\\route.ts",nextConfigOutput:"export",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:d,serverHooks:x}=c,h="/api/proxy-check/route";function y(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:d})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[948,972],()=>t(929));module.exports=o})();